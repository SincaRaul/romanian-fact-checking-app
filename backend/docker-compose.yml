version: '3.9'
services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 30

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: python -m app.worker
    volumes:
      - ./:/code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  analytics:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    command: python -m app.worker analytics
    volumes:
      - ./:/code
    depends_on:
      redis:
        condition: service_started

volumes:
  pgdata:
